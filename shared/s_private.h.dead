// s_private.h

#ifndef s_private_h
#define s_private_h

// get the utils running in different environmets, that are:
// in game 
// in life
// without them

#if defined( S_INGAME ) // game functions

// in game
// ==============================

#include "interfaces.h"

#define S_Malloc	MM_Malloc
#define S_Free		MM_Free
#define S_Printf	SHV_Printf

#define NEWTYPE( x )	( (x *)(memset( (MM_Malloc(sizeof(x)) ), 0, sizeof(x) ) ) )
#define INITTYPE( _addr, _type )	( (memset( _addr, 0, sizeof( _type ) ) ) )
#define NEWBYTES( x )	( (void *)(memset( (MM_Malloc(x) ), 0, x ) ) )
#define FREE( x )	( MM_Free( x ) ) 

#elif defined( S_INLIFE ) // life functions

// in life
// ==============================

#include "l_locals.h"
#include "shock.h"
#define S_Malloc	li.MM_Malloc
#define S_Free		li.MM_Free
#define S_Printf	li.SH_Printf

#define NEWTYPE( x )	( (x *)(memset( (li.MM_Malloc(sizeof(x)) ), 0, sizeof(x) ) ) )
#define NEWBYTES( x )	( (void *)(memset( (li.MM_Malloc(x) ), 0, x ) ) )
#define FREE( x )	( li.MM_Free( x ) ) 

#elif defined( S_INSST )// sst functions
// ========================================
// in sound subsystem

#include "sst_locals.h"
#include "shock.h"

#define S_Malloc	si.MM_Malloc
#define S_Free		si.MM_Free
#define S_Printf	si.SH_Printf

#define NEWTYPE( x )	( (x *)(memset( (si.MM_Malloc(sizeof(x)) ), 0, sizeof(x) ) ) )
#define NEWBYTES( x )	( (void *)(memset( (si.MM_Malloc(x) ), 0, x ) ) )
#define FREE( x )	( si.MM_Free( x ) ) 


#else

// nothing defined, use libc
// ==============================
#include <stdlib.h>
#warning S_INLIFE or S_INGAME not set. using libc!

#define S_Malloc	malloc
#define S_Free		free
#define S_Printf	printf

#define NEWTYPE( x )	( (x *)(memset( (malloc(sizeof(x)) ), 0, sizeof(x) ) ) )
#define NEWBYTES( x )	( (void *)(memset( (malloc(x) ), 0, x ) ) )
#define FREE( x )	( free( x ) ) 


#endif  


#endif
